"""cleared

Revision ID: d74466df3ff5
Revises: 9d08ac146c2c
Create Date: 2025-08-06 12:27:45.054479

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd74466df3ff5'
down_revision = '9d08ac146c2c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Сначала удаляем constraints, потом таблицы
    op.drop_constraint(op.f('pending_stock_operations_allegro_order_id_fkey'), 'pending_stock_operations', type_='foreignkey')
    op.create_index(op.f('ix_pending_stock_operations_allegro_order_id'), 'pending_stock_operations', ['allegro_order_id'], unique=False)
    
    # Удаляем зависимые таблицы в правильном порядке
    op.drop_table('order_line_items')
    op.drop_table('allegro_line_items')
    op.drop_table('allegro_orders')
    op.drop_table('allegro_buyers')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(op.f('pending_stock_operations_allegro_order_id_fkey'), 'pending_stock_operations', 'allegro_orders', ['allegro_order_id'], ['id'])
    op.drop_index(op.f('ix_pending_stock_operations_allegro_order_id'), table_name='pending_stock_operations')
    op.create_table('allegro_buyers',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('login', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('company_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('address', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='allegro_buyers_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('order_line_items',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('order_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('line_item_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['line_item_id'], ['allegro_line_items.id'], name=op.f('order_line_items_line_item_id_fkey')),
    sa.ForeignKeyConstraint(['order_id'], ['allegro_orders.id'], name=op.f('order_line_items_order_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('order_line_items_pkey'))
    )
    op.create_table('allegro_line_items',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('offer_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('offer_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('external_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('original_price', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('price', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('allegro_line_items_pkey'))
    )
    op.create_table('allegro_orders',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('belongs_to', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('buyer_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('payment', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('fulfillment', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('delivery', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('token_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_stock_updated', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['buyer_id'], ['allegro_buyers.id'], name=op.f('allegro_orders_buyer_id_fkey')),
    sa.ForeignKeyConstraint(['token_id'], ['allegro_tokens.id_'], name=op.f('allegro_orders_token_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('allegro_orders_pkey'))
    )
    # ### end Alembic commands ###
